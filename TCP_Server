import socket
import threading
bind_ip = "0.0.0.0"
bind_port = 9999
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((bind_ip,bind_port))
# maximum backlog of connections set to 5
server.listen(5)
print "[*] Listening on %s:%d" % (bind_ip,bind_port)

# this is our client-handling thread
def handle_client(client_socket):
  # print out what the client sends, 1024 is the size of the buffer that is used to receive the packet from the client
  request = client_socket.recv(1024)
  print "[*] Received: %s" % request
  # send back a packet
  client_socket.send("ACK!")
  client_socket.close()

while True:
  # server accepts the connection and stores the client socket and address in the variables client and addr.
 client,addr = server.accept()
print "[*] Accepted connection from: %s:%d" % (addr[0],addr[1])
# spin up our client thread to handle incoming data
client_handler = threading.Thread(target=handle_client,args=(client,))
 client_handler.start()
# We can use a try-except block to handle any errors that might occur
